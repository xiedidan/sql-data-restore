# Oracle到Doris数据迁移系统配置示例
# 请复制此文件为 config.yaml 并根据实际环境修改配置

# 数据库连接配置
database:
  # 目标数据库类型选择: doris 或 postgresql
  target_type: "doris"                  # 可选值: "doris", "postgresql"
  
  doris:
    host: "localhost"                    # Doris FE节点地址
    port: 9030                          # Doris查询端口
    user: "root"                        # 数据库用户名
    password: ""                        # 数据库密码
    database: "migration_db"            # 目标数据库名
    charset: "utf8mb4"                  # 字符集
  
  postgresql:
    host: "localhost"                    # PostgreSQL服务器地址
    port: 5432                          # PostgreSQL端口
    user: "postgres"                    # 数据库用户名
    password: ""                        # 数据库密码
    database: "migration_db"            # 目标数据库名

# DeepSeek AI配置
deepseek:
  api_key: "your_deepseek_api_key_here"  # 在这里填入你的DeepSeek API密钥
  base_url: "https://api.deepseek.com"   # API基础URL
  model: "deepseek-reasoner"             # 使用的模型名称
  max_tokens: 4000                       # 最大输出令牌数
  temperature: 0.1                       # 温度参数（0-1，越低越确定）
  timeout: 30                           # API调用超时时间（秒）

# Web界面配置
web_interface:
  host: "0.0.0.0"                       # 监听地址（0.0.0.0表示监听所有网卡）
  port: 5000                            # 监听端口
  debug: false                          # 是否开启调试模式
  secret_key: "your_secret_key_here"    # Flask密钥，请使用随机字符串
  
  # 实时通信配置
  communication:
    mode: "auto"                        # 通信模式：auto(自动选择), websocket(WebSocket优先), polling(轮询优先), polling_only(仅轮询)
    websocket_timeout: 120              # WebSocket超时时间（秒）
    polling_interval: 2                 # 轮询间隔（秒）
    max_reconnect_attempts: 15          # 最大重连次数
    heartbeat_interval: 20              # 心跳间隔（秒）
    fallback_to_polling: true           # WebSocket失败时是否回退到轮询

# 迁移配置
migration:
  sample_lines: 100                     # 提取样本数据的行数
  chunk_size_mb: 30                     # 文件分块大小（MB）
  max_workers: 8                        # 最大并发工作线程数
  batch_size: 1000                      # 批处理大小
  retry_count: 3                        # 失败重试次数
  enable_user_confirmation: true        # 是否启用用户确认DDL
  temp_dir: "./temp"                    # 临时文件目录
  
  # 并行性能优化配置
  enable_parallel_insert: true          # 启用并行插入（推荐）
  parallel_batch_size: 500              # 并行批次大小（适合并行的批次大小）
  connection_pool_size: 8               # 连接池大小（默认等于max_workers）
  
  # 编码处理配置
  encoding_detection_confidence: 0.7    # 编码检测置信度阈值
  fallback_encodings:                   # 回退编码列表
    - "utf-8"
    - "gbk" 
    - "gb2312"
    - "utf-16"
    - "big5"
    - "latin1"

# SQL解析器配置（性能优化）
parser:
  use_fast_parser: true                 # 启用高性能解析器
  fast_parser_threshold: 52428800       # 50MB，超过此大小使用高性能解析
  chunk_size: 1048576                   # 解析块大小（1MB）
  max_workers: 4                        # 多线程解析的最大线程数
  memory_map_threshold: 104857600       # 100MB，超过此大小使用内存映射
  threaded_threshold: 209715200         # 200MB，超过此大小使用多线程解析

# 文件访问安全配置
file_access:
  # 允许访问的目录列表（安全白名单）
  allowed_directories:
    - "./uploads"                        # 上传目录
    - "./tests/sample_data"              # 测试数据目录
    - "/data/oracle_dumps"               # Oracle数据导出目录（示例）
    - "/var/migration/sql"               # 迁移SQL文件目录（示例）
  
  # 安全设置
  max_file_size_mb: 2048                # 最大文件大小限制（MB）
  allowed_extensions: [".sql"]           # 允许的文件扩展名
  enable_path_traversal_protection: true # 启用路径遍历保护
  
  # 性能设置
  file_info_cache_ttl: 300              # 文件信息缓存时间（秒）
  max_concurrent_validations: 10        # 最大并发验证数
  
  # 路径输入功能
  enable_server_path_input: true        # 启用服务器路径输入功能
  path_suggestions:                     # 路径建议列表
    - "./uploads/"
    - "./tests/sample_data/"
    - "/data/oracle_dumps/"
  max_path_length: 255                  # 最大路径长度

# 日志配置
logging:
  level: "INFO"                         # 日志级别：DEBUG, INFO, WARNING, ERROR
  file: "migration.log"                 # 日志文件名
  max_size_mb: 100                      # 日志文件最大大小（MB）
  backup_count: 5                       # 保留的备份文件数量

# 性能调优建议：
# 1. 根据服务器CPU核心数调整 max_workers（推荐：核心数 * 2）
# 2. 根据可用内存调整 chunk_size_mb（推荐：总内存的5-10%）
# 3. 根据网络延迟调整 batch_size（高延迟环境使用更大批次）
# 4. 在生产环境中关闭debug模式并设置适当的日志级别
# 5. 并行插入优化：
#    - enable_parallel_insert: true 启用并行插入，显著提升性能
#    - connection_pool_size: 设置为服务器CPU核心数
#    - parallel_batch_size: 适中值，太大可能占用过多内存
# 6. 中文编码优化：
#    - encoding_detection_confidence: 0.7 置信度阈值，防止误判
#    - fallback_encodings: 包含常用中文编码的回退列表